<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[HTTP/2 Server Push 功能介绍]]></title>
    <url>%2F2018%2F04%2F18%2FHTTP-2-Server-push-%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[HTTP/2 文档中心文案功能说明 HTTP/2 即超文本传输协议 2.0，是下一代 HTTP 协议，在 CDN 控制台您可以灵活进行 HTTP/2 特性的开启和关闭。 又拍云 CDN 服务当前已全平台支持 HTTP/2。HTTP/2 是在 HTTPS 协议的基础上实现的，只要使用又拍云 HTTPS 加速服务的域名，都可免费享受 HTTP/2 服务。又拍云控制台关于 HTTP/2 的配置支持三种模式的设置，分别是： 1)开启 HTTP/2 默认开启 HTTP/2 特性，包括采用二进制格式传输数据、对消息头采用 HPACK 进行压缩传输、多路复用 等特性，但不包括 Server Push 特性。 2)关闭 HTTP/2 如需关闭 HTTP/2 特性，可以选择关闭，请根据要求合理关闭。 3)开启 HTTP/2 + Server Push 该模式下，支持 HTTP/2 的所有特性，其中 Server Push 特性需要根据业务需求合理配置。 特别强调的是，Server Push 是 HTTP/2 规范中引入的一种新技术，也即服务端在没有被客户端明确的询问下，抢先的 “推送” 一些网站资源给客户端。该特性只要被正确的使用，可以达到很好的页面访问效果。 配置引导 登陆 CDN 控制台，依次进入：服务管理 &gt; 功能配置 &gt; HTTPS &gt; HTTP/2 配置，点击【管理】按钮即可开始配置。如下图所示： 1）开启 HTTP/2 默认已经开启，如截图所示： 注意：当且仅当开启 HTTPS 加速时，HTTP/2 特性才会生效。 2）关闭 HTTP/2 如需关闭 HTTP/2 特性，可以在控制台关闭，点击【关闭 HTTP/2】按钮，然后点击【确定】即可保存配置。如截图所示： 3）开启 HTTP/2 + Server Push 如下截图所示，点击【 开启 HTTP/2 + Server Push 】按钮，配置匹配路径以及推送资源，然后点击【确定】即可保存配置。 其中，在配置项里面，【匹配路径】是必填项，【推送资源】是非必填项。 匹配路径：也即 Server Push 特性仅针对匹配的 URI 生效，示例为： 12/index.html/admin.html 推送资源：表示匹配 URI 后将要推送的资源的 PATH（不包括 HOST 部分），示例为： 12/style/index.css/dyn/index.js 需要注意的是当源站有设置 Link 首部时，即使【推送资源】在 CDN 端没有进行自定义设置，也会生效，其中 Link 首部的示例为： 1Link: &lt;/css/styles.css&gt;; rel=preload; as=style 注意事项 HTTP/2 特性是在 HTTPS 协议的基础上实现，需要加速域名支持 HTTPS 访问方可支持该特性； 使用 Server Push 特性，通常会在源站设置 Link 首部，例如： 1Link: &lt;/css/styles.css&gt;; rel=preload; as=style 如果在 CDN 端进行自定义 Server Push 配置，优先级会高于源站设置的 Link 首部。]]></content>
  </entry>
  <entry>
    <title><![CDATA[测试]]></title>
    <url>%2F2018%2F03%2F03%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post 1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
